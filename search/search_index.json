{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Exercise: Run 3 ttbar cross section measurement In this exercise we will perform a measurement of the ttbar cross section in","title":"Home"},{"location":"#exercise-run-3-ttbar-cross-section-measurement","text":"In this exercise we will perform a measurement of the ttbar cross section in","title":"Exercise: Run 3 ttbar cross section measurement"},{"location":"example/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. Pepper - ParticlE Physics ProcEssoR A python framework for analyzing NanoAODs. Easy to use and highly configurable. The framework is designed to allow analysis of any type of event topology. For reference this repository comes with the necessary tools for a analysis. Installation It is recommended to use a proper environment with Pepper. An example environment setup for DESY NAF can be found here , which can be sourced after cloning the repository. Pepper can be installed as a python package as follows: git clone <repository url> pepper cd pepper source example/environment.sh python3 -m pip install --upgrade --upgrade-strategy eager --editable . # Additionally only if on CentOS7 (e.g. DESY NAF in 2023): python3 -m pip install \"urllib3<2\" This will update all dependencies to the latest version. Now pepper can be imported as any other python package from any location. Because of the --editable option, if you edit files inside your cloned pepper directory, the changes will be in effect already the next time you import pepper . Note : If you are on CentOS7, please run python3 -m pip install \"urllib3<2\" , as written above. CentOS7 is lacking a recent OpenSSL version, thus an older urllib3 version is required. Usage Getting started In Pepper an analysis is implemented as a Processor class. A short example of such a Processor with many explanatory comments can be found in here . This processor can be run by executing python3 -m pepper.runproc example_processor.py example_config.json (when inside the example directory). Also running python -m pepper.runproc -h will show the available command line options.","title":"Welcome to MkDocs"},{"location":"example/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"example/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"example/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"example/#pepper-particle-physics-processor","text":"A python framework for analyzing NanoAODs. Easy to use and highly configurable. The framework is designed to allow analysis of any type of event topology. For reference this repository comes with the necessary tools for a analysis.","title":"Pepper - ParticlE Physics ProcEssoR"},{"location":"example/#installation","text":"It is recommended to use a proper environment with Pepper. An example environment setup for DESY NAF can be found here , which can be sourced after cloning the repository. Pepper can be installed as a python package as follows: git clone <repository url> pepper cd pepper source example/environment.sh python3 -m pip install --upgrade --upgrade-strategy eager --editable . # Additionally only if on CentOS7 (e.g. DESY NAF in 2023): python3 -m pip install \"urllib3<2\" This will update all dependencies to the latest version. Now pepper can be imported as any other python package from any location. Because of the --editable option, if you edit files inside your cloned pepper directory, the changes will be in effect already the next time you import pepper . Note : If you are on CentOS7, please run python3 -m pip install \"urllib3<2\" , as written above. CentOS7 is lacking a recent OpenSSL version, thus an older urllib3 version is required.","title":"Installation"},{"location":"example/#usage","text":"","title":"Usage"},{"location":"example/#getting-started","text":"In Pepper an analysis is implemented as a Processor class. A short example of such a Processor with many explanatory comments can be found in here . This processor can be run by executing python3 -m pepper.runproc example_processor.py example_config.json (when inside the example directory). Also running python -m pepper.runproc -h will show the available command line options.","title":"Getting started"},{"location":"pre-exercise/","text":"Installing Pepper Install Pepper: git clone <repository url> pepper cd pepper source example/environment.sh python3 -m pip install --upgrade --upgrade-strategy eager --editable . python3 -m pip install \"urllib3<2\" To check that your installation of pepper is working, try running the following commands, which will run an example processor in debug mode. This can be run locally. cd example python3 -m pepper.runproc example_processor.py example_config.json -d Installing combine We don't really \"use CMSSW\" in this exercise, but we use the standard CMS statistical fitting tool combine, which is usually installed within CMSSW. Follow the instructions below if you do not have an installed version from a previous exercise. Combine v9 - recommended version The nominal installation method is inside CMSSW. The current release targets CMSSW 11_3_X series because this release has both python2 and python3 ROOT bindings, allowing a more gradual migration of user code to python3. Combine is fully python3-compatible and can work also in 12_X releases. cmsrel CMSSW_11_3_4 cd CMSSW_11_3_4/src cmsenv git clone https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit.git HiggsAnalysis/CombinedLimit cd HiggsAnalysis/CombinedLimit Update to a recommended tag - currently the recommended tag is v9.1.0 : see release notes cd $CMSSW_BASE/src/HiggsAnalysis/CombinedLimit git fetch origin git checkout v9.1.0 scramv1 b clean; scramv1 b Combine harvester This package serves as an interface to combine with many scripts that handle some advanced use cases. The name is a bad joke about tractors. We will need it to make some nice plots, so install it using the following commands: bash <(curl -s https://raw.githubusercontent.com/cms-analysis/CombineHarvester/main/CombineTools/scripts/sparse-checkout-ssh.sh) scramv1 b clean; scramv1 b","title":"Pre-exercise"},{"location":"pre-exercise/#installing-pepper","text":"Install Pepper: git clone <repository url> pepper cd pepper source example/environment.sh python3 -m pip install --upgrade --upgrade-strategy eager --editable . python3 -m pip install \"urllib3<2\" To check that your installation of pepper is working, try running the following commands, which will run an example processor in debug mode. This can be run locally. cd example python3 -m pepper.runproc example_processor.py example_config.json -d","title":"Installing Pepper"},{"location":"pre-exercise/#installing-combine","text":"We don't really \"use CMSSW\" in this exercise, but we use the standard CMS statistical fitting tool combine, which is usually installed within CMSSW. Follow the instructions below if you do not have an installed version from a previous exercise.","title":"Installing combine"},{"location":"pre-exercise/#combine-v9-recommended-version","text":"The nominal installation method is inside CMSSW. The current release targets CMSSW 11_3_X series because this release has both python2 and python3 ROOT bindings, allowing a more gradual migration of user code to python3. Combine is fully python3-compatible and can work also in 12_X releases. cmsrel CMSSW_11_3_4 cd CMSSW_11_3_4/src cmsenv git clone https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit.git HiggsAnalysis/CombinedLimit cd HiggsAnalysis/CombinedLimit Update to a recommended tag - currently the recommended tag is v9.1.0 : see release notes cd $CMSSW_BASE/src/HiggsAnalysis/CombinedLimit git fetch origin git checkout v9.1.0 scramv1 b clean; scramv1 b","title":"Combine v9 - recommended version"},{"location":"pre-exercise/#combine-harvester","text":"This package serves as an interface to combine with many scripts that handle some advanced use cases. The name is a bad joke about tractors. We will need it to make some nice plots, so install it using the following commands: bash <(curl -s https://raw.githubusercontent.com/cms-analysis/CombineHarvester/main/CombineTools/scripts/sparse-checkout-ssh.sh) scramv1 b clean; scramv1 b","title":"Combine harvester"}]}